# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    permissions:
      # write permission is required to create a github release
      contents: write
      # write permission is required for autolabeler
      # otherwise, read permission is required at least
      pull-requests: write
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4.1.0
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Prettier formatting check
        run: pnpm lint:format

      - name: eslint
        run: pnpm lint:js

      - name: Build packages
        run: pnpm run build

      # It makes sense to do this on PRs to ensure the change didn't break the Storybook
      - name: Build storybook
        run: pnpm build:storybook

      - name: Install Playwright
        run: pnpm exec playwright install --with-deps

      - name: Serve Storybook and run tests
        run: |
          pnpm dlx concurrently -k -s first -n "SB,TEST" -c "magenta,blue" \
            "pnpm dlx http-server storybook-static --port 6006 --silent" \
            "pnpm dlx wait-on tcp:127.0.0.1:6006 && yarn test-storybook"
