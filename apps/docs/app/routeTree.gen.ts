/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as StudioImport } from './routes/studio'
import { Route as DocsImport } from './routes/_docs'
import { Route as DocsIndexImport } from './routes/_docs/index'
import { Route as DocsProfilIkonerImport } from './routes/_docs/profil/ikoner'
import { Route as DocsProfilFargerImport } from './routes/_docs/profil/farger'
import { Route as DocsKomponenterButtonImport } from './routes/_docs/komponenter/button'
import { Route as DocsKomponenterBadgeImport } from './routes/_docs/komponenter/badge'

// Create/Update Routes

const StudioRoute = StudioImport.update({
  id: '/studio',
  path: '/studio',
  getParentRoute: () => rootRoute,
} as any)

const DocsRoute = DocsImport.update({
  id: '/_docs',
  getParentRoute: () => rootRoute,
} as any)

const DocsIndexRoute = DocsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DocsRoute,
} as any)

const DocsProfilIkonerRoute = DocsProfilIkonerImport.update({
  id: '/profil/ikoner',
  path: '/profil/ikoner',
  getParentRoute: () => DocsRoute,
} as any)

const DocsProfilFargerRoute = DocsProfilFargerImport.update({
  id: '/profil/farger',
  path: '/profil/farger',
  getParentRoute: () => DocsRoute,
} as any)

const DocsKomponenterButtonRoute = DocsKomponenterButtonImport.update({
  id: '/komponenter/button',
  path: '/komponenter/button',
  getParentRoute: () => DocsRoute,
} as any)

const DocsKomponenterBadgeRoute = DocsKomponenterBadgeImport.update({
  id: '/komponenter/badge',
  path: '/komponenter/badge',
  getParentRoute: () => DocsRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_docs': {
      id: '/_docs'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DocsImport
      parentRoute: typeof rootRoute
    }
    '/studio': {
      id: '/studio'
      path: '/studio'
      fullPath: '/studio'
      preLoaderRoute: typeof StudioImport
      parentRoute: typeof rootRoute
    }
    '/_docs/': {
      id: '/_docs/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof DocsIndexImport
      parentRoute: typeof DocsImport
    }
    '/_docs/komponenter/badge': {
      id: '/_docs/komponenter/badge'
      path: '/komponenter/badge'
      fullPath: '/komponenter/badge'
      preLoaderRoute: typeof DocsKomponenterBadgeImport
      parentRoute: typeof DocsImport
    }
    '/_docs/komponenter/button': {
      id: '/_docs/komponenter/button'
      path: '/komponenter/button'
      fullPath: '/komponenter/button'
      preLoaderRoute: typeof DocsKomponenterButtonImport
      parentRoute: typeof DocsImport
    }
    '/_docs/profil/farger': {
      id: '/_docs/profil/farger'
      path: '/profil/farger'
      fullPath: '/profil/farger'
      preLoaderRoute: typeof DocsProfilFargerImport
      parentRoute: typeof DocsImport
    }
    '/_docs/profil/ikoner': {
      id: '/_docs/profil/ikoner'
      path: '/profil/ikoner'
      fullPath: '/profil/ikoner'
      preLoaderRoute: typeof DocsProfilIkonerImport
      parentRoute: typeof DocsImport
    }
  }
}

// Create and export the route tree

interface DocsRouteChildren {
  DocsIndexRoute: typeof DocsIndexRoute
  DocsKomponenterBadgeRoute: typeof DocsKomponenterBadgeRoute
  DocsKomponenterButtonRoute: typeof DocsKomponenterButtonRoute
  DocsProfilFargerRoute: typeof DocsProfilFargerRoute
  DocsProfilIkonerRoute: typeof DocsProfilIkonerRoute
}

const DocsRouteChildren: DocsRouteChildren = {
  DocsIndexRoute: DocsIndexRoute,
  DocsKomponenterBadgeRoute: DocsKomponenterBadgeRoute,
  DocsKomponenterButtonRoute: DocsKomponenterButtonRoute,
  DocsProfilFargerRoute: DocsProfilFargerRoute,
  DocsProfilIkonerRoute: DocsProfilIkonerRoute,
}

const DocsRouteWithChildren = DocsRoute._addFileChildren(DocsRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof DocsRouteWithChildren
  '/studio': typeof StudioRoute
  '/': typeof DocsIndexRoute
  '/komponenter/badge': typeof DocsKomponenterBadgeRoute
  '/komponenter/button': typeof DocsKomponenterButtonRoute
  '/profil/farger': typeof DocsProfilFargerRoute
  '/profil/ikoner': typeof DocsProfilIkonerRoute
}

export interface FileRoutesByTo {
  '/studio': typeof StudioRoute
  '/': typeof DocsIndexRoute
  '/komponenter/badge': typeof DocsKomponenterBadgeRoute
  '/komponenter/button': typeof DocsKomponenterButtonRoute
  '/profil/farger': typeof DocsProfilFargerRoute
  '/profil/ikoner': typeof DocsProfilIkonerRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_docs': typeof DocsRouteWithChildren
  '/studio': typeof StudioRoute
  '/_docs/': typeof DocsIndexRoute
  '/_docs/komponenter/badge': typeof DocsKomponenterBadgeRoute
  '/_docs/komponenter/button': typeof DocsKomponenterButtonRoute
  '/_docs/profil/farger': typeof DocsProfilFargerRoute
  '/_docs/profil/ikoner': typeof DocsProfilIkonerRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/studio'
    | '/'
    | '/komponenter/badge'
    | '/komponenter/button'
    | '/profil/farger'
    | '/profil/ikoner'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/studio'
    | '/'
    | '/komponenter/badge'
    | '/komponenter/button'
    | '/profil/farger'
    | '/profil/ikoner'
  id:
    | '__root__'
    | '/_docs'
    | '/studio'
    | '/_docs/'
    | '/_docs/komponenter/badge'
    | '/_docs/komponenter/button'
    | '/_docs/profil/farger'
    | '/_docs/profil/ikoner'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  DocsRoute: typeof DocsRouteWithChildren
  StudioRoute: typeof StudioRoute
}

const rootRouteChildren: RootRouteChildren = {
  DocsRoute: DocsRouteWithChildren,
  StudioRoute: StudioRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_docs",
        "/studio"
      ]
    },
    "/_docs": {
      "filePath": "_docs.tsx",
      "children": [
        "/_docs/",
        "/_docs/komponenter/badge",
        "/_docs/komponenter/button",
        "/_docs/profil/farger",
        "/_docs/profil/ikoner"
      ]
    },
    "/studio": {
      "filePath": "studio.tsx"
    },
    "/_docs/": {
      "filePath": "_docs/index.tsx",
      "parent": "/_docs"
    },
    "/_docs/komponenter/badge": {
      "filePath": "_docs/komponenter/badge.tsx",
      "parent": "/_docs"
    },
    "/_docs/komponenter/button": {
      "filePath": "_docs/komponenter/button.tsx",
      "parent": "/_docs"
    },
    "/_docs/profil/farger": {
      "filePath": "_docs/profil/farger.tsx",
      "parent": "/_docs"
    },
    "/_docs/profil/ikoner": {
      "filePath": "_docs/profil/ikoner.tsx",
      "parent": "/_docs"
    }
  }
}
ROUTE_MANIFEST_END */
